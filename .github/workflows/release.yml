name: Release Chronofoil.CLI

on:
  push:
    tags:
      - "*"

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x.x'
      - name: Publish
        run: |
          if [ "${{ runner.os }}" == "Linux" ]; then
            ver=${{ github.ref_name }}
            dotnet publish src/Chronofoil.CLI.csproj -c Release -r linux-x64 -p:PublishSingleFile=true -p:Version=$ver --self-contained
            mkdir -p artifacts
            mv src/bin/Release/net9.0/linux-x64/publish/cfcli artifacts/cfcli-$ver-linux-x64
          elif [ "${{ runner.os }}" == "Windows" ]; then
            $ver = "${{ github.ref_name }}"
            dotnet publish src/Chronofoil.CLI.csproj -c Release -r win-x64 -p:PublishSingleFile=true -p:Version=$ver --self-contained
            dotnet publish src/Chronofoil.CLI.csproj -c Release -r win-arm64 -p:PublishSingleFile=true -p:Version=$ver --self-contained
            mkdir -p artifacts
            move src/bin/Release/net9.0/win-x64/publish/cfcli.exe artifacts/cfcli-$ver-win-x64.exe
            move src/bin/Release/net9.0/win-arm64/publish/cfcli.exe artifacts/cfcli-$ver-win-arm64.exe
          elif [ "${{ runner.os }}" == "macOS" ]; then
            ver=${{ github.ref_name }}
            dotnet publish src/Chronofoil.CLI.csproj -c Release -r osx-x64 -p:PublishSingleFile=true -p:Version=$ver --self-contained
            dotnet publish src/Chronofoil.CLI.csproj -c Release -r osx-arm64 -p:PublishSingleFile=true -p:Version=$ver --self-contained
            mkdir -p artifacts
            mv src/bin/Release/net9.0/osx-x64/publish/cfcli artifacts/cfcli-$ver-mac-x64
            mv src/bin/Release/net9.0/osx-arm64/publish/cfcli artifacts/cfcli-$ver-mac-arm64
          fi
        shell: bash

      - uses: actions/upload-artifact@v4
        with:
          name: cfcli-${{ runner.os }}
          path: artifacts/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: release-out
          pattern: cfcli-*
          merge-multiple: true
      - name: Display structure of downloaded files
        run: ls -R release-out
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Chronofoil CLI v${{ github.ref_name }}
          body: Automatic tag-based release for ${{ github.ref_name }}
          files: release-out/*