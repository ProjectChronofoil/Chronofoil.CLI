name: Release Chronofoil.CLI

on:
  push:
    tags:
      - "*"

jobs:
  build-linux-x64:
    name: Build on Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x.x'
      - name: Publish
        run: |
          ver=${{ github.ref_name }}
          dotnet publish src/Chronofoil.CLI.csproj -c Release -r linux-x64 -p:PublishSingleFile=true -p:Version=$ver --self-contained
          mkdir -p artifacts
          mv src/bin/Release/net9.0/linux-x64/publish/cfcli artifacts/cfcli-$ver--linux-x64
      - uses: actions/upload-artifact@v4
        with:
          name: cfcli-linux-x64
          path: artifacts/*
          
  build-linux-arm:
    name: Build on Linux
    runs-on: ubuntu-24.04-arm
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x.x'
      - name: Publish
        run: |
          ver=${{ github.ref_name }}
          dotnet publish src/Chronofoil.CLI.csproj -c Release -r linux-arm64 -p:PublishSingleFile=true -p:Version=$ver --self-contained
          mkdir -p artifacts
          mv src/bin/Release/net9.0/linux-arm64/publish/cfcli artifacts/cfcli-$ver-linux-arm64
      - uses: actions/upload-artifact@v4
        with:
          name: cfcli-linux
          path: artifacts/*

  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x.x'
      - name: Publish
        run: |
          $ver = '${{ github.ref_name }}'
          dotnet publish src/Chronofoil.CLI.csproj -c Release -r win-x64 -p:PublishSingleFile=true -p:Version=$ver --self-contained
          dotnet publish src/Chronofoil.CLI.csproj -c Release -r win-arm64 -p:PublishSingleFile=true -p:Version=$ver --self-contained
          mkdir -p artifacts
          move src\bin\Release\net9.0\win-x64\publish\cfcli.exe artifacts\cfcli-$ver-win-x64.exe
          move src\bin\Release\net9.0\win-arm64\publish\cfcli.exe artifacts\cfcli-$ver-win-arm64.exe
      - uses: actions/upload-artifact@v4
        with:
          name: cfcli-windows
          path: artifacts/*

  build-macos:
    name: Build on macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x.x'
      - name: Publish
        run: |
          ver=${{ github.ref_name }}
          dotnet publish src/Chronofoil.CLI.csproj -c Release -r osx-x64 -p:PublishSingleFile=true -p:Version=$ver --self-contained
          dotnet publish src/Chronofoil.CLI.csproj -c Release -r osx-arm64 -p:PublishSingleFile=true -p:Version=$ver --self-contained
          mkdir -p artifacts
          mv src/bin/Release/net9.0/osx-x64/publish/cfcli artifacts/cfcli-$ver-mac-x64
          mv src/bin/Release/net9.0/osx-arm64/publish/cfcli artifacts/cfcli-$ver-mac-arm64
      - uses: actions/upload-artifact@v4
        with:
          name: cfcli-macos
          path: artifacts/*

  release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: release-out
          pattern: cfcli-*
          merge-multiple: true
      - name: Display structure of downloaded files
        run: ls -R release-out
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Chronofoil CLI v${{ github.ref_name }}
          body: Automatic tag-based release for ${{ github.ref_name }}
          files: release-out/*
